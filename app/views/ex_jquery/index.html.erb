<div class="content ex_jquery">
  	<div class="examples">
		<div class="leftbar">
			<ul class="tabs">
				<li><a href="#tab1" class="cf">Selecting</a></li>
				<li><a href="#tab2" class="cf">Traversing</a></li>
				<li><a href="#tab3" class="cf">Manipulating</a></li>
				<li><a href="#tab4" class="cf">Create an input hint</a></li>
				<li><a href="#tab5" class="cf">Add tabbed navigation</a></li>
				<li><a href="#tab6" class="cf">Reveal Hidden text</a></li>
				<li><a href="#tab7" class="cf">Create dropdown menus</a></li>
				<li><a href="#tab8" class="cf">Create Slideshow</a></li>
				<li><a href="#tab9" class="cf">Load External content</a></li>
				<li><a href="#tab10" class="cf">Load content using JSON</a></li>
				<li><a href="#tab11" class="cf">live</a></li>
			</ul>
		</div>
		<div class="rightbar tab_container">
			<div class="tab_content" id="tab1">
			  <h2>Selecting</h2>
		      <p>Open the file /exercises/index.html in your browser. Use the file /exercises/js/sandbox.js to accomplish the following:</p>
			  <ol>
			  	<li>Select all of the div elements that have a class of "module".</li>
			  	<li>Come up with three selectors that you could use to get the third item in the #myList unordered list. Which is the best to use? Why?</li>
			  	<li>Select the label for the search input using an attribute selector.</li>
			  	<li>Figure out how many elements on the page are hidden</li>
			  	<li>Figure out how many image elements on the page have an alt attribute.</li>
			  	<li>Select all of the odd table rows in the table body.</li>
			  </ol>	
			  <h3>Solution: </h3>	 
			  <p class="bold"><%= link_to"Click here for Solution" , '/ex_jquery/exercise01'%></a>
			</div>

			<div class="tab_content" id="tab2">
			  <h2>Traversing</h2>
		      <p>Open the file /exercises/index.html in your browser. Use the file /exercises/js/sandbox.js to accomplish the following:</p>
			  <ol>
			  	<li>Select all of the image elements on the page; log each image's alt attribute.</li>
			  	<li>Select the search input text box, then traverse up to the form and add a class to the form.</li>
			  	<li>Select the list item inside #myList that has a class of "current" and remove that class from it; add a class of "current" to the next list item.</li>
			  	<li>Select the select element inside #specials; traverse your way to the submit button.</li>
			  	<li>Select the first list item in the #slideshow element; add the class "current" to it, and then add a class of "disabled" to its sibling elements.</li>
			  </ol>	
			  <h3>Solution: </h3>	 
			  <p class="bold"><%= link_to"Click here for Solution" , '/ex_jquery/exercise02'%></a>
			</div>

			<div class="tab_content" id="tab3">
			  <h2>Manipulating</h2>
		      <p>Open the file /exercises/index.html in your browser. Use the file /exercises/js/sandbox.js to accomplish the following:</p>
			  <ol>
			  	<li>Add five new list items to the end of the unordered list #myList.</li>
			  	<li>Remove the odd list items</li>
			  	<li>Add another h2 and another paragraph to the last div.module</li>
			  	<li>Add another option to the select element; give the option the value "Wednesday"</li>
			  	<li>Add a new div.module to the page after the last one; put a copy of one of the existing images inside of it.</li>
			  </ol>	
			  <h3>Solution: </h3>	 
			  <p class="bold"><%= link_to"Click here for Solution" , '/ex_jquery/exercise03'%></a>
			</div>

			<div class="tab_content" id="tab4">
			  <h2>Create an input hint</h2>
		      <p>Open the file /exercises/index.html in your browser. Use the file /exercises/js/inputHint.js or work in Firebug. Your task is to use the text of the label for the search input to create "hint" text for the search input. The steps are as follows:</p>
			  <ol>
			  	<li>Set the value of the search input to the text of the label element</li>
			  	<li>Add a class of "hint" to the search input</li>
			  	<li>Remove the label element</li>
			  	<li>Bind a focus event to the search input that removes the hint text and the "hint" class</li>
			  	<li>Bind a blur event to the search input that restores the hint text and "hint" class if no search text was entered</li>
			  </ol>	
			  <h3>Solution: </h3>	 
			  <p class="bold"><%= link_to"Click here for Solution" , '/ex_jquery/exercise04'%></a>
			</div>

			<div class="tab_content" id="tab5">
			  <h2>Add tabbed navigation</h2>
		      <p>Open the file /exercises/index.html in your browser. Use the file /exercises/js/tabs.js. Your task is to create tabbed navigation for the two div.module elements. To accomplish this:</p>
			  <ol>
			  	<li>Hide all of the modules.</li>
			  	<li>Create an unordered list element before the first module.</li>
			  	<li>Iterate over the modules using $.fn.each. For each module, use the text of the h2 element as the text for a list item that you add to the unordered list element.</li>
			  	<li>Bind a click event to the list item that: 
			  		<ol>
			  			<li>Shows the related module, and hides any other modules</li>
			  			<li>Adds a class of "current" to the clicked list item</li>
			  			<li>Removes the class "current" from the other list item</li>
			  		</ol>	
			  	</li>
			  	<li>Finally, show the first tab.</li>
			  </ol>	
			  <h3>Solution: </h3>	 
			  <p class="bold"><%= link_to"Click here for Solution" , '/ex_jquery/exercise05'%></a>
			</div>

			<div class="tab_content" id="tab6">
			  <h2>Reveal hidden text.</h2>		      
			  <h3>Solution: </h3>	 
			  <p class="bold"><%= link_to"Click here for Solution" , '/ex_jquery/exercise06'%></a>
			</div>

			<div class="tab_content" id="tab7">
			  <h2>Create Drop down menus.</h2>		      
			  <h3>Solution: </h3>	 
			  <p class="bold"><%= link_to"Click here for Solution" , '/ex_jquery/exercise07'%></a>
			</div>

			<div class="tab_content" id="tab8">
			  <h2>Create a Slideshow</h2>	
			  <p>This is a tough one if you do not know JS basics and particularly scopes.</p>
			    <p>Open the file /exercises/index.html in your browser. Use the file /exercises/js/slideshow.js. Your task is to take a plain semantic HTML page and enhance it with JavaScript by adding a slideshow.</p>
			    <ol>
			    	<li>Move the #slideshow element to the top of the body.</li>
			    	<li>Write code to cycle through the list items inside the element; fade one in, display it for a few seconds, then fade it out and fade in the next one.</li>
			    	<li>When you get to the end of the list, start again at the beginning.</li>
			    	<li>For an extra challenge, create a navigation area under the slideshow that shows how many images there are and which image you're currently viewing. (Hint: $.fn.prevAll will come in handy for this.)</li>
			    </ol>		      
			  <h3>Solution: </h3>	 
			  <p class="bold"><%= link_to"Click here for Solution" , '/ex_jquery/exercise08'%></a>
			</div>

			<div class="tab_content" id="tab9">
			  <h2>Load External Content</h2>		      
			  <h3>Solution: </h3>	 
			  <p class="bold"><%= link_to"Click here for Solution" , '/ex_jquery/exercise09'%></a>
			</div>

			<div class="tab_content" id="tab10">
			  <h2>Load content using JSON</h2>		      
			  <h3>Solution: </h3>	 
			  <p class="bold"><%= link_to"Click here for Solution" , '/ex_jquery/exercise10'%></a>
			</div>

			<div class="tab_content" id="tab11">
			  <h2>live/delegate()</h2>
			  <p>Create a stack of divs. Initially an empty container should display</p>
			  <ol>
			  	<li> a button on right side says "add item", should add a div to the stack with an incremental number(starting from 1) </li>
			  	<li>clicking any item in the stack should highlight that item</li>
			  	<li>clicking the last item on the stack should remove that item from the stack

</li>
			  </ol>		      
			  <h3>Solution: </h3>	 
			  <p class="bold"><%= link_to"Click here for Solution" , '/ex_jquery/exercise10'%></a>
			</div>


		</div>		
	</div>
</div>	